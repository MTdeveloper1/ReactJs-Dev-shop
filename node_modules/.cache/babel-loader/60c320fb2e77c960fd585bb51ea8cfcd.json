{"ast":null,"code":"var _jsxFileName = \"/Users/manueltodorov/Desktop/dev-shop/src/components/Checkout/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { FormCheckout } from \"../../components/checkout/FormCheckout\";\nimport { CartContext } from \"../context/CartContext\";\nimport { db } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Checkout = () => {\n  _s();\n\n  const {\n    cart,\n    totalValor,\n    clearCart\n  } = useContext(CartContext);\n  const [orderId, setOrderId] = useState(false);\n  const [statePurchase, setStatePurchase] = useState(false);\n  const [error, setError] = useState(false);\n  console.log(cart.length);\n\n  const createOrder = data => {\n    const order = {\n      buyer: data,\n      items: cart,\n      total: totalValor\n    };\n    const orders = db.collection(\"orders\");\n    orders.add(order).then(({\n      id\n    }) => {\n      setOrderId(id);\n      setStatePurchase(true);\n    }).catch(err => {\n      setError(err);\n    });\n  };\n\n  return statePurchase === true ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: `/checkout/result/${orderId}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this) : cart.length > 0 ? /*#__PURE__*/_jsxDEV(FormCheckout, {\n    createOrder: createOrder\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 27\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: `/`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 72\n  }, this);\n};\n\n_s(Checkout, \"68zTOfbVxXmZW1naMww+tKkl+LU=\");\n\n_c = Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/manueltodorov/Desktop/dev-shop/src/components/Checkout/Checkout.js"],"names":["React","useEffect","useContext","useState","Redirect","FormCheckout","CartContext","db","Checkout","cart","totalValor","clearCart","orderId","setOrderId","statePurchase","setStatePurchase","error","setError","console","log","length","createOrder","data","order","buyer","items","total","orders","collection","add","then","id","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,wCAA7B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,EAAT,QAAmB,gBAAnB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA;AAApB,MAAkCT,UAAU,CAACI,WAAD,CAAlD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACW,MAAjB;;AAEA,QAAMC,WAAW,GAAIC,IAAD,IAAU;AAC1B,UAAMC,KAAK,GAAG;AAAEC,MAAAA,KAAK,EAAEF,IAAT;AAAeG,MAAAA,KAAK,EAAEhB,IAAtB;AAA4BiB,MAAAA,KAAK,EAAEhB;AAAnC,KAAd;AACA,UAAMiB,MAAM,GAAGpB,EAAE,CAACqB,UAAH,CAAc,QAAd,CAAf;AACAD,IAAAA,MAAM,CACDE,GADL,CACSN,KADT,EAEKO,IAFL,CAEU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAY;AACdlB,MAAAA,UAAU,CAACkB,EAAD,CAAV;AACAhB,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,KALL,EAMKiB,KANL,CAMYC,GAAD,IAAS;AACZhB,MAAAA,QAAQ,CAACgB,GAAD,CAAR;AACH,KARL;AASH,GAZD;;AAcA,SAAOnB,aAAa,KAAK,IAAlB,gBAEH,QAAC,QAAD;AAAU,IAAA,EAAE,EAAG,oBAAmBF,OAAQ;AAA1C;AAAA;AAAA;AAAA;AAAA,UAFG,GAMHH,IAAI,CAACW,MAAL,GAAc,CAAd,gBAAkB,QAAC,YAAD;AAAc,IAAA,WAAW,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAlB,gBAA+D,QAAC,QAAD;AAAU,IAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,UANnE;AAQH,CA7BM;;GAAMb,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { FormCheckout } from \"../../components/checkout/FormCheckout\";\nimport { CartContext } from \"../context/CartContext\";\nimport { db } from \"../../firebase\";\n\nexport const Checkout = () => {\n    const { cart, totalValor, clearCart } = useContext(CartContext);\n    const [orderId, setOrderId] = useState(false);\n    const [statePurchase, setStatePurchase] = useState(false);\n    const [error, setError] = useState(false);\n    console.log(cart.length)\n\n    const createOrder = (data) => {\n        const order = { buyer: data, items: cart, total: totalValor };\n        const orders = db.collection(\"orders\");\n        orders\n            .add(order)\n            .then(({ id }) => {\n                setOrderId(id);\n                setStatePurchase(true);\n            })\n            .catch((err) => {\n                setError(err);\n            });\n    };\n\n    return statePurchase === true ? \n    (   \n        <Redirect to={`/checkout/result/${orderId}`}/>   \n    ) \n    : \n    (\n        cart.length > 0 ? <FormCheckout createOrder={createOrder} /> : <Redirect to={`/`}/>    \n    );\n};"]},"metadata":{},"sourceType":"module"}