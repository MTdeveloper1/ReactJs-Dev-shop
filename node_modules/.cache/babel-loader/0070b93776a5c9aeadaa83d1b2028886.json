{"ast":null,"code":"var _jsxFileName = \"/Users/manueltodorov/Desktop/dev-shop/src/views/Checkuot/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { FormCheckout } from \"../../components/checkout/FormCheckout\";\nimport { CartContext } from \"../../components/context/CartContext\";\nimport { db } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Checkout = () => {\n  _s();\n\n  const {\n    cart,\n    setStatePurchase,\n    statePurchase\n  } = useContext(CartContext);\n  const [orderId, setOrderId] = useState(false);\n\n  const createOrder = data => {\n    const acumular = (acumulador, item) => acumulador + item.price * item.quantity;\n\n    const totalValor = cart.reduce(acumular, 0);\n    const order = {\n      buyer: data,\n      items: cart,\n      total: totalValor\n    };\n    const orders = db.collection(\"orders\");\n    orders.add(order).then(({\n      id\n    }) => {\n      setOrderId(id); // success\n\n      setStatePurchase(true);\n    }).catch(err => {\n      alert(err);\n    });\n  };\n\n  return cart.length > 0 ? statePurchase ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: `/checkout/result/${orderId}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(FormCheckout, {\n    createOrder: createOrder\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"Ydf11dBof6NUUnUcM7d1shB3bNM=\");\n\n_c = Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/manueltodorov/Desktop/dev-shop/src/views/Checkuot/Checkout.js"],"names":["React","useContext","useState","Redirect","FormCheckout","CartContext","db","Checkout","cart","setStatePurchase","statePurchase","orderId","setOrderId","createOrder","data","acumular","acumulador","item","price","quantity","totalValor","reduce","order","buyer","items","total","orders","collection","add","then","id","catch","err","alert","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,wCAA7B;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,SAASC,EAAT,QAAmB,gBAAnB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,gBAAR;AAA0BC,IAAAA;AAA1B,MAA4CT,UAAU,CAACI,WAAD,CAA5D;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMW,WAAW,GAAIC,IAAD,IAAU;AAC1B,UAAMC,QAAQ,GAAG,CAACC,UAAD,EAAaC,IAAb,KACbD,UAAU,GAAGC,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACE,QADnC;;AAEA,UAAMC,UAAU,GAAGZ,IAAI,CAACa,MAAL,CAAYN,QAAZ,EAAsB,CAAtB,CAAnB;AACA,UAAMO,KAAK,GAAG;AAAEC,MAAAA,KAAK,EAAET,IAAT;AAAeU,MAAAA,KAAK,EAAEhB,IAAtB;AAA4BiB,MAAAA,KAAK,EAAEL;AAAnC,KAAd;AACA,UAAMM,MAAM,GAAGpB,EAAE,CAACqB,UAAH,CAAc,QAAd,CAAf;AACAD,IAAAA,MAAM,CACDE,GADL,CACSN,KADT,EAEKO,IAFL,CAEU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAY;AACdlB,MAAAA,UAAU,CAACkB,EAAD,CAAV,CADc,CACE;;AAChBrB,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,KALL,EAMKsB,KANL,CAMYC,GAAD,IAAS;AACZC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACH,KARL;AASH,GAfD;;AAiBA,SAAOxB,IAAI,CAAC0B,MAAL,GAAc,CAAd,GACHxB,aAAa,gBACT,QAAC,QAAD;AAAU,IAAA,EAAE,EAAG,oBAAmBC,OAAQ;AAA1C;AAAA;AAAA;AAAA;AAAA,UADS,gBAGT,QAAC,YAAD;AAAc,IAAA,WAAW,EAAEE;AAA3B;AAAA;AAAA;AAAA;AAAA,UAJD,gBAOH,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAPJ;AASH,CA9BM;;GAAMN,Q;;KAAAA,Q","sourcesContent":["import React from \"react\";\nimport { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { FormCheckout } from \"../../components/checkout/FormCheckout\";\nimport { CartContext } from \"../../components/context/CartContext\";\nimport { db } from \"../../firebase\";\n\nexport const Checkout = () => {\n    const { cart, setStatePurchase, statePurchase } = useContext(CartContext);\n    const [orderId, setOrderId] = useState(false);\n\n    const createOrder = (data) => {\n        const acumular = (acumulador, item) =>\n            acumulador + item.price * item.quantity;\n        const totalValor = cart.reduce(acumular, 0);\n        const order = { buyer: data, items: cart, total: totalValor };\n        const orders = db.collection(\"orders\");\n        orders\n            .add(order)\n            .then(({ id }) => {\n                setOrderId(id); // success\n                setStatePurchase(true);\n            })\n            .catch((err) => {\n                alert(err);\n            });\n    };\n\n    return cart.length > 0 ? (\n        statePurchase ? (\n            <Redirect to={`/checkout/result/${orderId}`} />\n        ) : (\n            <FormCheckout createOrder={createOrder} />\n        )\n    ) : (\n        <Redirect to=\"/\" />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}